Class adalah salah satu dari konsep OOP yang digunakan untuk membungkus data abstraksi procedural sebagai deskripsi tergeneralisir atau rancangan dari sebuah object untuk mendefinisikan atau menggambarkan isi dan tingkah laku sebagai entitas dari object.

#include <iostream>
using namespace std;

class Box{
	public:
		double length;
		double breadth;
		double height;
		
	};
	int main(){
		Box Box1;
		Box Box2;
		double volume=0.0;
		
		//box 1 specification
		Box1.height = 5.0;
		Box1.length =6.0;
		Box1.breadth = 7.0;
		
		//box 2 specification
		Box2.height = 10.0;
		Box2.length = 12.0;
		Box2.breadth = 13.0;
		
		//volume of box 1
		volume = Box1.height *Box1.length * Box1.breadth;
		cout<< "Volume of box1 :"<<volume <<endl;
		
		//volume of box 2
		volume = Box2.height *Box2.length * Box2.breadth;
		cout<< "Volume of box2 :"<<volume <<endl;
		return 0;
		
		
		
		
	}
  
 class mahasiswa{
public:
    int nim;
    string nama;
    float nilai;
    void printData(){
        cout<<"NIM   \t= "<<nim<<endl;
        cout<<"Nama  \t= "<<nama<<endl;
        cout<<"Nilai \t= "<<nilai<<endl;
    }
}anton;
//Diatas adalah sepenggal program yang mencontohkan bagaimana cara mendirikan dan mendefinisikan sebuah class dengan nama class mahasiswa. Di dalam class pada baris pertama isi dari class terdapat akses specifier public yang berarti semua anggota di bawah label itu akan bersifat bebas untuk diakses dari dalam maupun dari luar class.

Baris kedua sampai empat definisi dari class terdapat tiga variabel nim, nama dan nilai dengan tipe data int, string dan float yang merupakan member variable dari class tersebut. Dan pada baris berikutnya terdapat anggota yang berupa member function atau biasa disebut method, yang mempunyai definisi dengan tugas untuk mencetak nilai dari anggota variabel di atasnya.
#include<iostream>
using namespace std;
 struct Mahasiswa{
 string nama,npm;	
 };
 int main(){
 	Mahasiswa Mhs;
 	cin>>Mhs.nama;
 	cin>>Mhs.npm;
 	
 	cout<<Mhs.nama << " "<<Mhs.npm;
 }
 
 //MEMBUAT PROGRAM DENGAN SETTER DAN GETTER
/*
class PersegiPanjang{
	private:
		int panjang;
		int lebar;
	
	public:
		void setPanjang(int panjang){
			this -> panjang = panjang;
		}
		
		void setLebar(int lebar){
			this -> lebar = lebar;
		}
		
		int getPanjang(){
			return panjang;
		}
		
		int getLebar(){
			return lebar;
		}
		
		int Luas(){
			return panjang * lebar;
		}
		};

int main(){
	PersegiPanjang psg;
	
	psg.setLebar(10);
	psg.setPanjang(10);
	
	cout << "Panjang : " << psg.getPanjang() << endl;
	cout << "Lebar   : " << psg.getLebar() << endl;
	cout << "Luas    : " << psg.Luas() << endl;

}
/*
SETTER biasanya menggunakan void/prosedur dan memiliki satu parameter didalamnya.
lalu fungsi main akan memanggil fungsi setter tsb untuk diberikan nilai.

fungsi GETTER selalu sama dengan tipe data artibut yang dituju. kita memiliki 
artibut dgn tipe data string, maka fungsi getter akan bertipe string juga.
*/

